//! `SeaORM` Entity, @generated by sea-orm-codegen 2.0.0-rc.16

use super::sea_orm_active_enums::QuotaType;
use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Serialize, Deserialize)]
#[sea_orm(table_name = "quota")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub id: Uuid,
    #[sea_orm(unique)]
    pub user_id: Uuid,
    #[sea_orm(column_type = "Float")]
    pub free_quota: f32,
    #[sea_orm(column_type = "Float")]
    pub add_on_quota: f32,
    #[sea_orm(column_type = "Float")]
    pub total_quota: f32,
    #[sea_orm(column_type = "Float")]
    pub used_quota: f32,
    #[sea_orm(column_type = "Float")]
    pub remaining_quota: f32,
    pub quota_type: QuotaType,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::user::Entity",
        from = "Column::UserId",
        to = "super::user::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    User,
}

impl Related<super::user::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::User.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
